{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\n\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\n\nlet userSelectedDate;\nlet timeInterval;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n      console.log(selectedDates[0]);\n      userSelectedDate = selectedDates[0];\n      timeInterval = userSelectedDate - options.defaultDate;\n       if (timeInterval < 1) {\n      iziToast.error({\n        color: 'red',\n        position: 'topRight',\n        message: `Please choose a date in the future`,\n             });\n           startBtn.disabled = true;\n           startBtn.classList.add(\"button:disabled\");\n    } else {\n      startBtn.disabled = false;\n      inputTime.disabled = true;\n    }\n  },\n};\n\nconst calendar = flatpickr('#datetime-picker', options);\nconst inputTime = document.querySelector('#datetime-picker');\nconst startBtn = document.querySelector(\"button\");\nconst showTime = document.querySelectorAll('.value');\nstartBtn.disabled = true;\n\nstartBtn.addEventListener('click', event => {\n  const repeatTime = setInterval(() => {\n    timeInterval = userSelectedDate - new Date();\n    if (timeInterval < 1) {\n        startBtn.disabled = true;\n      clearInterval(repeatTime);\n      return;\n    }\n    const timer = convertMs(timeInterval);\n    showTime[0].innerText = timer.days.toString().padStart(2, '0');\n    showTime[1].innerText = timer.hours.toString().padStart(2, '0');\n    showTime[2].innerText = timer.minutes.toString().padStart(2, '0');\n    showTime[3].innerText = timer.seconds.toString().padStart(2, '0');\n  }, 1000);\n    inputTime.disabled = true;\n});\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nconsole.log(convertMs(2000)); // {days: 0, hours: 0, minutes: 0, seconds: 2}\nconsole.log(convertMs(140000)); // {days: 0, hours: 0, minutes: 2, seconds: 20}\nconsole.log(convertMs(24140000)); // {days: 0, hours: 6 minutes: 42, seconds: 20}\n"],"names":["userSelectedDate","timeInterval","options","selectedDates","iziToast","startBtn","inputTime","flatpickr","showTime","event","repeatTime","timer","convertMs","ms","days","hours","minutes","seconds"],"mappings":"+IAOA,IAAIA,EACAC,EAEJ,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACnB,QAAQ,IAAIA,EAAc,CAAC,CAAC,EAC5BH,EAAmBG,EAAc,CAAC,EAClCF,EAAeD,EAAmBE,EAAQ,YACrCD,EAAe,GACpBG,EAAS,MAAM,CACb,MAAO,MACP,SAAU,WACV,QAAS,oCACjB,CAAc,EACHC,EAAS,SAAW,GACpBA,EAAS,UAAU,IAAI,iBAAiB,IAE7CA,EAAS,SAAW,GACpBC,EAAU,SAAW,GAExB,CACH,EAEiBC,EAAU,mBAAoBL,CAAO,EACtD,MAAMI,EAAY,SAAS,cAAc,kBAAkB,EACrDD,EAAW,SAAS,cAAc,QAAQ,EAC1CG,EAAW,SAAS,iBAAiB,QAAQ,EACnDH,EAAS,SAAW,GAEpBA,EAAS,iBAAiB,QAASI,GAAS,CAC1C,MAAMC,EAAa,YAAY,IAAM,CAEnC,GADAT,EAAeD,EAAmB,IAAI,KAClCC,EAAe,EAAG,CAClBI,EAAS,SAAW,GACtB,cAAcK,CAAU,EACxB,MACD,CACD,MAAMC,EAAQC,EAAUX,CAAY,EACpCO,EAAS,CAAC,EAAE,UAAYG,EAAM,KAAK,SAAQ,EAAG,SAAS,EAAG,GAAG,EAC7DH,EAAS,CAAC,EAAE,UAAYG,EAAM,MAAM,SAAQ,EAAG,SAAS,EAAG,GAAG,EAC9DH,EAAS,CAAC,EAAE,UAAYG,EAAM,QAAQ,SAAQ,EAAG,SAAS,EAAG,GAAG,EAChEH,EAAS,CAAC,EAAE,UAAYG,EAAM,QAAQ,SAAQ,EAAG,SAAS,EAAG,GAAG,CACjE,EAAE,GAAI,EACLL,EAAU,SAAW,EACzB,CAAC,EAED,SAASM,EAAUC,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,QAAQ,IAAIL,EAAU,GAAI,CAAC,EAC3B,QAAQ,IAAIA,EAAU,IAAM,CAAC,EAC7B,QAAQ,IAAIA,EAAU,MAAQ,CAAC"}